{"version":3,"file":"static/js/203.bf08281c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const ContactFormForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nmargin-right: auto;\nmargin-left: auto; \nmax-width: 400px;\n`;\n\nexport const ContactFormLabel = styled.label`\nmargin-top: ${p => p.theme.spasing(4)};\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const ContactFormField = styled(Field)`\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid ${p => p.theme.colors.Indigo};  \n  margin-bottom: ${p => p.theme.spasing(1)};\n  padding:${p => p.theme.spasing(1)};  \n`;\n\nexport const ContactFormError = styled(ErrorMessage)`\ncolor: ${p => p.theme.colors.Crimson};\nfont-size: 16px;\n`;\n\nexport const ContactFormButton = styled.button`\n  width: 150px;\n  padding:  ${p => p.theme.spasing(2)}  ${p => p.theme.spasing(2)}; \n  background-color: ${p => p.theme.colors.white};   \n  border-radius: ${p => p.theme.radii.lg}; \n  border: 1px solid ${p => p.theme.colors.Indigo};    \n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.blue}; \n    color: ${p => p.theme.colors.white};\n  } \n  margin-top: ${p => p.theme.spasing(5)};\n  margin-right: auto;\n  margin-left: auto;   \n`;","import { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations.js\"\nimport * as Yup from 'yup';\nimport { Formik } from \"formik\";\nimport { ContactFormButton, ContactFormError, ContactFormField, ContactFormForm, ContactFormLabel } from \"components/ContactForm/ContactForm.styled.js\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name must contain at least 2 characters')\n    .max(40, 'Too long name')\n    .required('Name is required!'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(20, 'Password is too long')\n    .required('Password is required'),\n  });\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    \n     <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n\n      onSubmit={(values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n      }}\n      validationSchema={validationSchema}\n      >\n        <ContactFormForm>\n            <ContactFormLabel htmlFor=\"name\">Name</ContactFormLabel>\n              <ContactFormField id=\"name\" type=\"text\" name=\"name\" placeholder=\"Jim Doun\" autoComplete=\"on\" />\n              \n              <ContactFormError name=\"name\" component=\"div\" />      \n              \n            <ContactFormLabel htmlFor=\"email\">Email</ContactFormLabel>\n              <ContactFormField id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"on\"  />\n              \n              <ContactFormError name=\"email\" component=\"div\" />\n        \n            <ContactFormLabel htmlFor=\"password\">Password</ContactFormLabel>\n              <ContactFormField id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"off\" />\n              \n              <ContactFormError name=\"password\" component=\"div\" />\n\n            <ContactFormButton type=\"submit\">Register</ContactFormButton>\n        </ContactFormForm>\n    </Formik>    \n  );\n};\n","import styled from 'styled-components';\n\nexport const RegisterTitle = styled.h2`\nmargin-top: ${p => p.theme.spasing(6)};\ntext-align: center;\ntext-transform: uppercase;\nfont-style: italic;\ncolor: ${p => p.theme.colors.Indigo}; \n`;\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { RegisterTitle } from \"./Register.styled\";\n\nexport default function Register() {\n  return (\n    <div>     \n      <RegisterTitle>Registration</RegisterTitle>    \n      <RegisterForm />\n    </div>\n  );\n}"],"names":["ContactFormForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactFormLabel","_templateObject2","p","theme","spasing","ContactFormField","Field","_templateObject3","colors","Indigo","ContactFormError","ErrorMessage","_templateObject4","Crimson","ContactFormButton","_templateObject5","white","radii","lg","blue","validationSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","register","children","_jsxs","htmlFor","id","type","placeholder","autoComplete","component","RegisterTitle","Register"],"sourceRoot":""}