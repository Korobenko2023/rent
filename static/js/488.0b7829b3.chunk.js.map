{"version":3,"file":"static/js/488.0b7829b3.chunk.js","mappings":"yLAGO,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHAQ9BC,EAAmBJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAC9BG,GAAKA,EAAEC,MAAMC,QAAQ,KAKtBC,GAAmBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAaW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wHAGvBG,GAAKA,EAAEC,MAAMK,OAAOC,SACvBP,GAAKA,EAAEC,MAAMC,QAAQ,KAC5BF,GAAKA,EAAEC,MAAMC,QAAQ,KAGpBM,GAAmBd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAoBgB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yCAC3CG,GAAKA,EAAEC,MAAMK,OAAOK,UAIhBC,EAAoBlB,EAAAA,GAAAA,OAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,gXAEhCG,GAAKA,EAAEC,MAAMC,QAAQ,KAAOF,GAAKA,EAAEC,MAAMC,QAAQ,KACzCF,GAAKA,EAAEC,MAAMK,OAAOQ,QACvBd,GAAKA,EAAEC,MAAMc,MAAMC,KAChBhB,GAAKA,EAAEC,MAAMK,OAAOC,SAKlBP,GAAKA,EAAEC,MAAMK,OAAOW,OAC/BjB,GAAKA,EAAEC,MAAMK,OAAOQ,QAEjBd,GAAKA,EAAEC,MAAMC,QAAQ,I,sGCrCrC,MAAMgB,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,yBACNC,SAAS,sBACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,0CACPC,IAAI,GAAI,wBACRH,SAAS,0BAGDI,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAEf,OACGC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACRC,cAAe,CACbV,MAAO,GACPE,SAAU,IAEZS,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAClCP,GAASS,EAAAA,EAAAA,IAAMH,IACfE,GAAW,EAETjB,iBAAkBA,EAAiBmB,UAE7BC,EAAAA,EAAAA,MAAC7C,EAAAA,GAAe,CAAA4C,SAAA,EAEhBR,EAAAA,EAAAA,KAAC/B,EAAAA,GAAgB,CAACyC,QAAQ,QAAOF,SAAC,WAChCR,EAAAA,EAAAA,KAAC1B,EAAAA,GAAgB,CAACqC,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,aAAa,QAExFf,EAAAA,EAAAA,KAACrB,EAAAA,GAAgB,CAACkC,KAAK,QAAQG,UAAU,SAE3ChB,EAAAA,EAAAA,KAAC/B,EAAAA,GAAgB,CAACyC,QAAQ,WAAUF,SAAC,cACnCR,EAAAA,EAAAA,KAAC1B,EAAAA,GAAgB,CAACqC,GAAG,WAAWC,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,aAAa,SAEpGf,EAAAA,EAAAA,KAACrB,EAAAA,GAAgB,CAACkC,KAAK,WAAWG,UAAU,SAE9ChB,EAAAA,EAAAA,KAACjB,EAAAA,GAAiB,CAAC6B,KAAK,SAAQJ,SAAC,eAEhC,E,eC3CN,MAAMS,E,OAAapD,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHACrBG,GAAKA,EAAEC,MAAMC,QAAQ,KAI1BF,GAAKA,EAAEC,MAAMK,OAAOC,SCJd,SAASwC,IACpB,OACIT,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIR,EAAAA,EAAAA,KAACiB,EAAU,CAAAT,SAAC,YACZR,EAAAA,EAAAA,KAACH,EAAS,MAGtB,C","sources":["components/ContactForm/ContactForm.styled.js","components/LoginForm/LoginForm.js","pages/Favorites/FavoritesPage.styled.js","pages/Favorites/FavoritesPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const ContactFormForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nmargin-right: auto;\nmargin-left: auto; \nmax-width: 400px;\n`;\n\nexport const ContactFormLabel = styled.label`\nmargin-top: ${p => p.theme.spasing(4)};\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const ContactFormField = styled(Field)`\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid ${p => p.theme.colors.Indigo};  \n  margin-bottom: ${p => p.theme.spasing(1)};\n  padding:${p => p.theme.spasing(1)};  \n`;\n\nexport const ContactFormError = styled(ErrorMessage)`\ncolor: ${p => p.theme.colors.Crimson};\nfont-size: 16px;\n`;\n\nexport const ContactFormButton = styled.button`\n  width: 150px;\n  padding:  ${p => p.theme.spasing(2)}  ${p => p.theme.spasing(2)}; \n  background-color: ${p => p.theme.colors.white};   \n  border-radius: ${p => p.theme.radii.lg}; \n  border: 1px solid ${p => p.theme.colors.Indigo};    \n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.blue}; \n    color: ${p => p.theme.colors.white};\n  } \n  margin-top: ${p => p.theme.spasing(5)};\n  margin-right: auto;\n  margin-left: auto;   \n`;","import * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operations\";\nimport { Formik } from 'formik';\nimport { ContactFormButton, ContactFormError, ContactFormField, ContactFormForm, ContactFormLabel } from 'components/ContactForm/ContactForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(20, 'Password is too long')\n    .required('Password is required'),\n  });\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n    return (\n       <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  }}\n      validationSchema={validationSchema} \n    >\n            <ContactFormForm>\n                \n            <ContactFormLabel htmlFor=\"email\">Email</ContactFormLabel>\n              <ContactFormField id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\" autoComplete=\"on\"/>\n              \n              <ContactFormError name=\"email\" component=\"div\" />\n        \n            <ContactFormLabel htmlFor=\"password\">Password</ContactFormLabel>\n              <ContactFormField id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" autoComplete=\"off\"/>\n              \n              <ContactFormError name=\"password\" component=\"div\" />\n\n            <ContactFormButton type=\"submit\">Log In</ContactFormButton>\n        </ContactFormForm>\n    </Formik> \n  );\n};\n\n\n\n\n","import styled from 'styled-components';\n\nexport const LoginTitle = styled.h2`\nmargin-top: ${p => p.theme.spasing(6)};\ntext-align: center;\ntext-transform: uppercase;\nfont-style: italic;\ncolor: ${p => p.theme.colors.Indigo}; \n`;\n","import { LoginForm } from \"components/LoginForm/LoginForm\";\nimport { LoginTitle } from \"./FavoritesPage.styled\";\n\nexport default function Login() {\n    return (\n        <div>            \n            <LoginTitle>Log In</LoginTitle>    \n            <LoginForm />\n        </div>\n    )\n}"],"names":["ContactFormForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactFormLabel","_templateObject2","p","theme","spasing","ContactFormField","Field","_templateObject3","colors","Indigo","ContactFormError","ErrorMessage","_templateObject4","Crimson","ContactFormButton","_templateObject5","white","radii","lg","blue","validationSchema","Yup","shape","email","required","password","min","max","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","logIn","children","_jsxs","htmlFor","id","type","name","placeholder","autoComplete","component","LoginTitle","Login"],"sourceRoot":""}