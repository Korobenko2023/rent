{"version":3,"file":"static/js/370.26d8b1e7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Catalog/CatalogPage.styled.js","pages/Catalog/CatalogPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const ContactFormForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nmargin-right: auto;\nmargin-left: auto; \nmax-width: 400px;\n`;\n\nexport const ContactFormLabel = styled.label`\nmargin-top: ${p => p.theme.spasing(4)};\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const ContactFormField = styled(Field)`\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid ${p => p.theme.colors.Indigo};  \n  margin-bottom: ${p => p.theme.spasing(1)};\n  padding:${p => p.theme.spasing(1)};  \n`;\n\nexport const ContactFormError = styled(ErrorMessage)`\ncolor: ${p => p.theme.colors.Crimson};\nfont-size: 16px;\n`;\n\nexport const ContactFormButton = styled.button`\n  width: 150px;\n  padding:  ${p => p.theme.spasing(2)}  ${p => p.theme.spasing(2)}; \n  background-color: ${p => p.theme.colors.white};   \n  border-radius: ${p => p.theme.radii.lg}; \n  border: 1px solid ${p => p.theme.colors.Indigo};    \n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.blue}; \n    color: ${p => p.theme.colors.white};\n  } \n  margin-top: ${p => p.theme.spasing(5)};\n  margin-right: auto;\n  margin-left: auto;   \n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase()\n      .includes(filter.toLowerCase().trim()))\n  }\n);","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { ContactFormButton, ContactFormError, ContactFormField, ContactFormForm, ContactFormLabel } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\n const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name must contain at least 2 characters')\n    .max(40, 'Too long name')\n    .required('Name is required!'),\n  number: Yup.string()\n    .matches(/^\\+(?:[0-9] ?){6,14}[0-9]$/, {\n      message: 'Invalid Phone Number!',\n      excludeEmptyString: false,\n    })\n    .required('Phone number is required!')\n    .max(15, 'Invalid phone number!'),\n  });\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const addNewContact = (newContact, { resetForm }) => {\n    if (contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n      toast.error(`${newContact.name} is already in contacts.`);\n      resetForm(); \n      return;\n    }\n    dispatch(addContact(newContact));   \n    resetForm(); \n};\n      \n  return (\n    \n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={addNewContact}\n      validationSchema={validationSchema} autoComplete=\"off\"\n    >\n        <ContactFormForm>\n            <ContactFormLabel htmlFor=\"name\">Name</ContactFormLabel>\n              <ContactFormField id=\"name\" type=\"text\" name=\"name\" placeholder=\"Jim Doun\" autoComplete=\"on\"/>\n              \n              <ContactFormError name=\"name\" component=\"div\" />      \n              \n            <ContactFormLabel htmlFor=\"number\">Number</ContactFormLabel>\n              <ContactFormField id=\"number\" type=\"tel\" name=\"number\" placeholder=\"+XX...\" autoComplete=\"on\"/>\n              \n            <ContactFormError name=\"number\" component=\"div\" />\n\n            <ContactFormButton type=\"submit\">Add contact</ContactFormButton>\n        </ContactFormForm>\n    </Formik>\n  );\n};\n\n","import styled from 'styled-components';\nexport const ContactItemLi = styled.li`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const ContactItemButton = styled.button`\n  width: 60px;   \n  padding: ${p => p.theme.spasing(1)}  ${p => p.theme.spasing(1)}; \n  background-color: ${p => p.theme.colors.Tomato};   \n  border-radius: 14px;\n  border: 1px solid ${p => p.theme.colors.Indigo};    \n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n  background-color: ${p => p.theme.colors.blue}; \n  color: ${p => p.theme.colors.white}; \n}   \n`;","import { useDispatch } from \"react-redux\";\nimport { ContactItemButton, ContactItemLi } from \"./ContactItem.styled\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const hendelDelete = () => dispatch(deleteContact(id));\n  \n  return (\n    <ContactItemLi>\n      {name}: {number}\n      <ContactItemButton onClick={hendelDelete}>Delete</ContactItemButton>\n    </ContactItemLi>\n  );\n};","import styled from 'styled-components';\nexport const ContactListUl = styled.ul`\n    display: flex;\n    flex-direction: column;\n    max-width: 380px;\n    margin-left: auto;\n    margin-right: auto;   \n    gap: ${p => p.theme.spasing(3)};  \n    margin-top: ${p => p.theme.spasing(2)};      \n`;","import { useSelector } from \"react-redux\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { ContactListUl } from \"./ContactList.styled\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactList = () => {\n  const сontacts = useSelector(selectVisibleContacts);\n \n  return (\n    <ContactListUl>\n      {сontacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}        \n        />\n      ))}\n    </ContactListUl>\n  );\n};","import styled from 'styled-components';\nexport const FilterDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const FilterLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin-top: ${p => p.theme.spasing(4)}; \n`;\n\nexport const FilterInput = styled.input`  \n  width: 100%;\n  border-radius: 8px;\n  outline: none;\n  border: 1px solid ${p => p.theme.colors.Indigo};  \n  margin-bottom: ${p => p.theme.spasing(1)};\n  padding:${p => p.theme.spasing(1)};  \n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { FilterDiv, FilterInput, FilterLabel } from \"./Filter.styled\";\nimport { filteredContacts} from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const hendelFiltered = (e) => dispatch(filteredContacts(e.target.value));\n\n        return (\n            <FilterDiv>\n                <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n                <FilterInput\n                    type=\"text\"\n                    name=\"filter\"\n                    id=\"filter\"\n                    value={filter}\n                    onChange={hendelFiltered} \n                />\n            </FilterDiv>\n        );\n};\n\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h3`\nmargin-top: ${p => p.theme.spasing(6)};\ntext-align: center;\nfont-style: italic;\ncolor: ${p => p.theme.colors.Indigo}; \n\n`;\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectContacts, selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { ContactsTitle } from \"./CatalogPage.styled\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts)\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm /> \n         {isLoading && !error && <Loader />}\n         {error && (toast.error('Oops! Something went wrong. Please try again later.'))}\n         {contacts.length > 0 ? (\n             <>\n               <ContactsTitle>Contacts list</ContactsTitle>              \n               <Filter />\n               <ContactList />\n             </>\n            ) : null}          \n    </>\n  );\n}"],"names":["ContactFormForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactFormLabel","_templateObject2","p","theme","spasing","ContactFormField","Field","_templateObject3","colors","Indigo","ContactFormError","ErrorMessage","_templateObject4","Crimson","ContactFormButton","_templateObject5","white","radii","lg","blue","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","contact","toLowerCase","includes","trim","validationSchema","Yup","shape","min","max","required","number","matches","message","excludeEmptyString","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","addNewContact","newContact","_ref","resetForm","some","toast","addContact","autoComplete","children","_jsxs","htmlFor","id","type","placeholder","component","ContactItemLi","ContactItemButton","Tomato","ContactItem","onClick","hendelDelete","deleteContact","ContactListUl","ContactList","сontacts","FilterDiv","FilterLabel","FilterInput","Filter","onChange","e","filteredContacts","target","ContactsTitle","Contacts","useEffect","fetchContacts","_Fragment","Loader"],"sourceRoot":""}