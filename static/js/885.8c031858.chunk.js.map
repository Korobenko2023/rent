{"version":3,"file":"static/js/885.8c031858.chunk.js","mappings":"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","sources":["public/sprite.svg","components/Modal/Modal.js","components/AutoCard/AutoCard.styled.js","components/AutoCard/AutoCard.js","components/AutosList/AutosList.styled.js","components/AutosList/AutosList.js","pages/Catalog/CatalogPage.styled.js","pages/Catalog/CatalogPage.js","redux/autos/selectors.js"],"sourcesContent":["var _defs;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"star\",\n    viewBox: \"0 0 34 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.56,\n    d: \"M13.227 10.020l3.84-7.277 3.84 7.277c0.34 0.644 0.959 1.093 1.675 1.217l8.108 1.403-5.735 5.9c-0.507 0.522-0.744 1.249-0.64 1.97l1.171 8.144-7.384-3.631c-0.653-0.321-1.418-0.321-2.071 0l-7.384 3.631 1.171-8.144c0.104-0.72-0.133-1.448-0.64-1.97l-5.735-5.9 8.108-1.403c0.717-0.124 1.336-0.574 1.675-1.217z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"map\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M28 13.333c0 9.333-12 17.333-12 17.333s-12-8-12-17.333c0-3.183 1.264-6.235 3.515-8.485s5.303-3.515 8.485-3.515c3.183 0 6.235 1.264 8.485 3.515s3.515 5.303 3.515 8.485z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6,\n    d: \"M16 17.333c2.209 0 4-1.791 4-4s-1.791-4-4-4c-2.209 0-4 1.791-4 4s1.791 4 4 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"iconHeart\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.0667,\n    d: \"M27.787 6.147c-0.681-0.681-1.49-1.222-2.379-1.591s-1.844-0.559-2.807-0.559-1.917 0.19-2.807 0.559c-0.89 0.369-1.699 0.909-2.38 1.591l-1.413 1.413-1.413-1.413c-1.376-1.376-3.241-2.148-5.187-2.148s-3.811 0.773-5.187 2.148c-1.376 1.376-2.148 3.241-2.148 5.187s0.773 3.811 2.148 5.187l11.787 11.787 11.787-11.787c0.681-0.681 1.222-1.49 1.591-2.38s0.559-1.844 0.559-2.807-0.19-1.917-0.559-2.807c-0.369-0.89-0.909-1.699-1.591-2.38z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.c1e327ae1da013728a10217b9d19842d.svg\";\nexport { ForwardRef as ReactComponent };","// import { Formik } from 'formik';\n// import * as Yup from 'yup';\n\n// const validationSchema = Yup.object().shape({\n//     name: Yup.string().min(3, 'Too short').required('Required'),\n//     email: Yup.string()\n//         .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,'Invalid email address')\n//         .required('Email is required!'),\n//     date: Yup.date().required('Required'),\n//     comment: Yup.string(),\n//   });\n\nexport const Modal = ({ isOpen, onClose, auto }) => {\n    \n  \n};","import styled from 'styled-components';\n\nexport const CardDiv = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  gap: 24px;\n  border: 1px solid ${(p) => p.theme.colors.grey};\n  border-radius: 20px;\n  padding: 24px;\n  width: 890px;\n  height: 360px;\n  margin-bottom: 32px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const AutoImg = styled.img`\n  border-radius: 10px;\n  width: 290px;\n  height: 310px;\n  object-fit: cover;\n`;\n\nexport const AutoTitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nexport const AutoTitle = styled.h2`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.25;\n  color: ${(p) => p.theme.colors.grey};\n  max-width: 340px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const PriceDiv = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ButtonFavorite = styled.button`\n  background: none;\n  padding: 0;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: none;\n  cursor: pointer;\n`;\n\nexport const AutoSubtitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n\nexport const SubtitleDiv = styled.div`\n  display: flex;\n  gap: 4px;\n  align-items: baseline;\n  justify-content: center;\n`;\n\nexport const IconSvg = styled.svg.attrs(props => ({\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 24 24',\n  isFavorite: props.isFavorite, \n}))`\n  width: 24px;\n  height: 24px;  \n  stroke: ${(props) => (props.isFavorite ? props.theme.colors.red : props.theme.colors.grey)};\n  fill: ${(props) => (props.isFavorite ? props.theme.colors.red : props.theme.colors.transparent)};\n  transition:\n    fill 250ms ${(p) => p.theme.transition},\n    stroke 250ms ${(p) => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    fill: ${(p) => p.theme.colors.red};\n    stroke: ${(p) => p.theme.colors.red};\n  }\n`;\n\nexport const IconStar = styled.svg`\n    fill: ${(p) => p.theme.colors.Yellow};\n    width: 16px;\n    height: 16px;\n`;\n\nexport const IconMap = styled.svg`\n    stroke: ${(p) => p.theme.colors.greyWhite};\n    width: 16px;\n    height: 16px;\n`;\n\nexport const AutoSubtitleText = styled.p`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${(p) => p.theme.colors.grey};\n`;\n\nexport const AutoDescription = styled.p`\n  max-width: 525px;\n  margin-bottom: 24px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  color: ${(p) => p.theme.colors.grey};\n`;\n\nexport const ShowMoreButton = styled.button`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: -0.01em;\n  color: ${(p) => p.theme.colors.whiteColor};\n  background-color: ${(p) => p.theme.colors.redColor};\n  border-radius: 200px;\n  padding: 16px 40px;\n  width: 166px;\n  height: 56px;\n  transition: background-color 250ms ${(p) => p.theme.transition};\n\n  &:hover,\n  &:focus {\n    background-color: ${(p) => p.theme.colors.hoverButtonColor};\n  }\n`;\n\nexport const Description = styled.p`\n  color: ${(p) => p.theme.colors.grey};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  max-width: 525px;\n  margin-bottom: 24px;\n`;\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectFavorites } from 'redux/autos/selectors';\nimport sprite from '../../public/sprite.svg';\nimport { Modal } from '../Modal/Modal';\n\nimport {\n  AutoImg,\n  AutoSubtitleDiv,\n  AutoSubtitleText,\n  AutoTitle,\n  AutoTitleDiv,\n  ButtonFavorite,\n  CardDiv,\n  Description,\n  IconMap,\n  IconStar,\n  IconSvg,\n  PriceDiv,\n  ShowMoreButton,\n  SubtitleDiv\n} from './AutoCard.styled';\nimport { addFavorites, removeFavorites } from 'redux/autos/favoritesSlice';\n\nexport const AutoCard = ({ auto }) => {\n    const { name, price, rating, reviews, location, description, gallery } = auto;\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const favorites = useSelector(selectFavorites);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const formatPrice = price.toFixed(2);\n\n    useEffect(() => {\n        setIsFavorite(favorites.some((f) => f._id === auto._id));\n    }, [favorites, auto._id]);\n    \n     const handleClick = () => {\n        setIsFavorite(!isFavorite);\n        if (!isFavorite) {\n            dispatch(addFavorites(auto));\n        } else {\n            dispatch(removeFavorites(auto._id));\n        }\n    };\n    \n    return (      \n        <CardDiv>\n            <div>\n                <AutoImg src={gallery[0]} alt={name} />\n            </div>\n            <div>\n                <AutoTitleDiv>\n                    <AutoTitle>{name}</AutoTitle>\n                    <PriceDiv>\n                        <AutoTitle>€{formatPrice}</AutoTitle>\n                        <ButtonFavorite type=\"button\" onClick={handleClick} >  \n                            <IconSvg>\n                                <use href={`${sprite}#iconHeart`} />                               \n                           </IconSvg>        \n                        </ButtonFavorite>\n                    </PriceDiv>\n                </AutoTitleDiv>\n                <AutoSubtitleDiv>\n                    <SubtitleDiv>\n                        <AutoSubtitleText >\n                            <IconStar>\n                                <use href={`${sprite}#star`} />\n                            </IconStar>\n                            {`${rating}(${reviews.length} Reviews)`}</AutoSubtitleText>\n                    </SubtitleDiv>\n                    <SubtitleDiv>\n                        <AutoSubtitleText>\n                            <IconMap>\n                                <use href={`${sprite}#map`} />\n                            </IconMap>\n                            {location}\n                        </AutoSubtitleText>\n                    </SubtitleDiv>                    \n                </AutoSubtitleDiv>\n                <Description>{description}</Description>\n                <ShowMoreButton type=\"button\" onClick={() => setIsModalOpen(true)}>\n                    Show more\n                </ShowMoreButton>\n            </div>\n            {isModalOpen && (\n                <Modal\n                    key={auto._id}\n                    isOpen={isModalOpen}\n                    onClose={() => setIsModalOpen(false)}\n                    auto={auto}\n                />\n            )}\n        </CardDiv>\n    );\n};\n","import styled from 'styled-components';\n\nexport const AutoListDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 50px;\n`;\n\nexport const AutoListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 50px;\n  padding-top: 100px;\n`;\n\nexport const Btn = styled.button`\n  border: 1px solid;\n  border-color: ${(p) => p.theme.colors.iris};\n  background-color: ${(p) => p.theme.colors.white};\n  border-radius: 200px;\n  padding: 16px 32px;\n  width: 145px;\n  height: 56px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: -0.01em;\n  color: ${(p) => p.theme.colors.black};\n  transition: border-color 250ms ${(p) => p.theme.transition};\n\n  &:hover {\n    border-color: ${(p) => p.theme.colors.Tomato};\n  }\n`;","import { useSelector } from \"react-redux\";\nimport { selectMessage } from \"redux/autos/selectors\";\nimport { AutoListDiv, AutoListUl, Btn } from \"./AutosList.styled\";\nimport { AutoCard } from \"components/AutoCard/AutoCard\";\n\nexport const AutosList = ({ autos, buttonMore }) => {\n  const message = useSelector(selectMessage);\n \n  return (\n     <AutoListDiv>\n      <AutoListUl>\n        {autos.map((item) => (\n          <li key={item._id}>\n            <AutoCard auto={item} />\n          </li>\n        ))}\n      </AutoListUl>\n      {message ? (\n        <p>{message}</p>\n      ) : (\n        <Btn type=\"button\" onClick={buttonMore}>\n          Load more\n        </Btn>\n      )}\n    </AutoListDiv>\n    );\n};","import styled from 'styled-components';\n\nexport const CatalogDiv = styled.div`\n  margin: 0 auto;\n  padding: 0 40px;\n  width: 100%;\n  background: ${p => p.theme.colors.greyWhite}; \n  max-width: 1440px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n","import { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAutos, selectIsLoading, selectError } from \"redux/autos/selectors\";\nimport { fetchAutos } from \"redux/autos/operations\";\nimport { AutosList } from \"components/AutosList/AutosList\";\nimport { CatalogDiv, Wrapper } from \"./CatalogPage.styled\";\n\nexport default function CatalogPage() {\n  const dispatch = useDispatch();  \n  const autos = useSelector(selectAutos);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [page, setPage] = useState(1);\n \n  useEffect(() => {\n    dispatch(fetchAutos(page));\n  }, [dispatch, page]);\n\n  const handleLoadMore = () => {\n    setPage((prevPage) => (prevPage += 1));\n  };\n\n  return (\n     <CatalogDiv>\n      <Wrapper>\n        {isLoading && !error && <Loader />}\n        {error && (toast.error('Oops! Something went wrong. Please try again later.'))}\n        {/* <SideBar /> */}\n        {autos.length > 0 ? (            \n            <AutosList autos={autos} buttonMore={handleLoadMore} />\n          ) : null}\n        </Wrapper>\n    </CatalogDiv>\n    );\n};","export const selectAutos = state => state.autos.items;\n\nexport const selectIsLoading = state => state.autos.isLoading;\n\nexport const selectError = state => state.autos.error;\n\nexport const selectMessage = (state) => state.autos.message;\n\nexport const selectFavorites = (state) => state.favorites;\n\n\n\n\n\n\n"],"names":["Modal","_ref","isOpen","onClose","auto","CardDiv","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","grey","AutoImg","_templateObject2","AutoTitleDiv","_templateObject3","AutoTitle","_templateObject4","PriceDiv","_templateObject5","ButtonFavorite","_templateObject6","AutoSubtitleDiv","_templateObject7","SubtitleDiv","_templateObject8","IconSvg","props","xmlns","viewBox","isFavorite","_templateObject9","red","transparent","transition","IconStar","_templateObject10","Yellow","IconMap","_templateObject11","greyWhite","AutoSubtitleText","_templateObject12","ShowMoreButton","_templateObject13","_templateObject14","whiteColor","redColor","hoverButtonColor","Description","_templateObject15","AutoCard","name","price","rating","reviews","location","description","gallery","dispatch","useDispatch","setIsFavorite","useState","favorites","useSelector","selectFavorites","isModalOpen","setIsModalOpen","formatPrice","toFixed","useEffect","some","f","_id","_jsxs","children","_jsx","src","alt","type","onClick","handleClick","removeFavorites","addFavorites","href","concat","sprite","length","AutoListDiv","AutoListUl","Btn","iris","white","black","Tomato","AutosList","autos","buttonMore","message","selectMessage","map","item","CatalogDiv","Wrapper","CatalogPage","selectAutos","isLoading","selectIsLoading","error","selectError","page","setPage","fetchAutos","Loader","toast","handleLoadMore","prevPage","state","items"],"sourceRoot":""}